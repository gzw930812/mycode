创建模式
1,工厂模式  --factory
  简单工厂模式：扩展性差，每次增加一个产品就需要修改原工厂类，耦合度较高
         定义：核心工厂类负责所有的实例的创建（根据不同参数）
  工厂方法模式：解耦，较简单工厂，扩展性提高，具体创建什么对象有客户端实现，但是每次增加产品需要增加对应的工厂类和实体类
         定义：父类工厂定义了创建对象的接口，但是由子类工厂来具体实现，工厂方法让类把实例化的动作推迟到了子类当中。  生产一个产品
  抽象工厂模式： 
         定义：工厂的工厂,工厂方法模式提供的所有产品都是衍生自同一个接口或抽象类，而抽象工厂模式所提供的产品则是衍生自不同的接口或抽象类。生产多个产品
  
2,原型模式  --prototype
 定义：用原型实例指定创建对象的种类，并通过拷贝这些原型创建新的对象。
    浅克隆：一般针对只有基本类型和字符串的类型，一般需要对应的类实现Cloneable接口。
    深克隆：在需要克隆的类中包含引用类型，为了克隆对象之间的互不影响，需要进行深度克隆。两种方法：1，引用类型和克隆对象的类都实现Cloneable接口，
                   并对应重新clone方法。2，都实现Serializble接口，通过序列化和反序列化实现。
   