<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cptech.system.dao.RoleMenuDao">
	<sql id="roleMenuColumns">
		id,role_id,menu_id,create_by,create_date,update_by,update_date,remarks,del_flag
	</sql>
	<select id="get" resultType="com.cptech.system.domain.RoleMenuDO">
		select  
			<include refid="roleMenuColumns"/>
		from
		sys_role_menu where id = #{id}
	</select>

	<select id="findAll" resultType="com.cptech.system.domain.RoleMenuDO">
		select 
			<include refid="roleMenuColumns"/> 
		from sys_role_menu
		<where>
			<if test="id != null and id != ''"> and id = #{id} </if>
			<if test="roleId != null and roleId != ''"> and role_id = #{roleId} </if>
			<if test="menuId != null and menuId != ''"> and menu_id = #{menuId} </if>
		</where>
	</select>
	
	<select id="findByPage" resultType="com.cptech.system.domain.RoleMenuDO">
		select 
			<include refid="roleMenuColumns"/> 
		from sys_role_menu
		<where>
			<if test="id != null and id != ''"> and id = #{id} </if>
			<if test="roleId != null and roleId != ''"> and role_id = #{roleId} </if>
			<if test="menuId != null and menuId != ''"> and menu_id = #{menuId} </if>
		</where>
		order by update_date desc
	</select>

	<insert id="save" parameterType="com.cptech.system.domain.RoleMenuDO"
		useGeneratedKeys="true" keyProperty="id">
		insert into sys_role_menu
		(
		role_id,
		menu_id,
		id,
		create_by,
		create_date,
		update_by,
		update_date,
		remarks,
		del_flag
		)
		values
		(
		#{roleId},
		#{menuId},
		#{id},
		#{createBy},
		#{createDate},
		#{updateBy},
		#{updateDate},
		#{remarks},
		#{delFlag}
		)
	</insert>

	<update id="update" parameterType="com.cptech.system.domain.RoleMenuDO">
		update sys_role_menu
		<set>
			<if test="roleId != null">role_id = #{roleId}, </if>
			<if test="menuId != null">menu_id = #{menuId}</if>
			<if test="createBy != null">create_by = #{createBy}, </if>
			<if test="createDate != null">create_date = #{createDate}, </if>
			<if test="updateBy != null">update_by = #{updateBy}, </if>
			<if test="updateDate != null">update_date = #{updateDate}, </if>
			<if test="remarks != null">remarks = #{remarks}, </if>
			<if test="delFlag != null">del_flag = #{delFlag} </if>
		</set>
		where id = #{id}
	</update>

	<delete id="remove">
		delete from sys_role_menu where id = #{id}
	</delete>

	<delete id="batchRemove">
		delete from sys_role_menu where id in
		<foreach item="ids" collection="array" open="(" separator=","
			close=")">
			#{ids}
		</foreach>
	</delete>

	<select id="listMenuIdByRoleId" resultType="string">
		select menu_id from sys_role_menu
		<where>role_id = #{roleId}</where>
	</select>

	<delete id="removeByRoleId">
		DELETE FROM sys_role_menu WHERE role_id=#{roleId}
	</delete>

	<delete id="removeByMenuId">
		DELETE FROM sys_role_menu WHERE menu_id=#{menuId}
	</delete>

	<insert id="batchSaveForMysql">
		INSERT INTO sys_role_menu(
		role_id,
		menu_id,
		id,
		create_by,
		create_date,
		update_by,
		update_date,
		remarks,
		del_flag
		) values
		<foreach item="item" index="index" collection="list"
			separator=",">
			(
			#{item.roleId},
			#{item.menuId},
			#{item.id},
			#{item.createBy},
			#{item.createDate},
			#{item.updateBy},
			#{item.updateDate},
			#{item.remarks},
			#{item.delFlag}
			)
		</foreach>
	</insert>
	<insert id="batchSaveForOracle">
		INSERT INTO sys_role_menu(
		role_id,
		menu_id,
		id,
		create_by,
		create_date,
		update_by,
		update_date,
		remarks,
		del_flag
		)
		<foreach item="item" index="index" collection="list"
			separator="UNION ALL">
			SELECT
				#{item.roleId},
				#{item.menuId},
				#{item.id},
				#{item.createBy},
				#{item.createDate},
				#{item.updateBy},
				#{item.updateDate},
				#{item.remarks},
				#{item.delFlag}
			from dual
		</foreach>
	</insert>
</mapper>