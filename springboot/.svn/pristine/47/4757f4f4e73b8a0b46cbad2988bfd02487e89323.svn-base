package com.cptech.stationinfo.controller;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.cptech.common.annotation.Log;
import com.cptech.common.controller.BaseController;
import com.cptech.common.utils.PageUtils;
import com.cptech.common.utils.R;
import com.cptech.stationinfo.domain.StationsDO;
import com.cptech.stationinfo.service.StationsService;
import com.github.pagehelper.Page;
import com.github.pagehelper.PageInfo;

/**
 * 站点（充装站、检验站）
 * 
 * @author fb
 * @email 1595418464@qq.com
 * @date 2018-06-20 16:41:38
 */
 
@Controller
@RequestMapping("/stationinfo/stations")
public class StationsController extends BaseController{
	@Autowired
	private StationsService stationsService;
	
	@GetMapping()
	@RequiresPermissions("stationinfo:stations:stations")
	String Stations(){
	    return "stationinfo/stations/stations";
	}
	
	@Log("站点（充装站、检验站）-查询列表")
	@ResponseBody
	@GetMapping("/list")
	@RequiresPermissions("stationinfo:stations:stations")
	public PageUtils list(StationsDO stations){
		//查询列表数据
		stations.setDeptId(getUser().getDeptId());
		Page<StationsDO> findByPage = stationsService.findByPage(stations);
		PageInfo<StationsDO> pageInfo = new PageInfo<>(findByPage);
		PageUtils pageUtil = new PageUtils(pageInfo.getList(), (int)pageInfo.getTotal());
		return pageUtil;
	}
	
	@GetMapping("/add")
	@RequiresPermissions("stationinfo:stations:add")
	String add(){
	    return "stationinfo/stations/add";
	}

	@GetMapping("/edit/{id}")
	@RequiresPermissions("stationinfo:stations:edit")
	String edit(@PathVariable("id") String id,Model model){
		StationsDO stations = stationsService.get(id);
		model.addAttribute("stations", stations);
	    return "stationinfo/stations/edit";
	}
	
	/**
	 * 保存
	 */
	@Log("站点（充装站、检验站）-保存")
	@ResponseBody
	@PostMapping("/save")
	@RequiresPermissions("stationinfo:stations:add")
	public R save( StationsDO stations){
		if(stationsService.save(stations)>0){
			return R.ok();
		}
		return R.error();
	}
	/**
	 * 修改
	 */
	@Log("站点（充装站、检验站）-修改")
	@ResponseBody
	@RequestMapping("/update")
	@RequiresPermissions("stationinfo:stations:edit")
	public R update( StationsDO stations){
		stationsService.update(stations);
		return R.ok();
	}
	
	/**
	 * 删除
	 */
	@Log("站点（充装站、检验站）-删除")
	@PostMapping( "/remove")
	@ResponseBody
	@RequiresPermissions("stationinfo:stations:remove")
	public R remove( String id){
		if(stationsService.remove(id)>0){
		return R.ok();
		}
		return R.error();
	}
	
	/**
	 * 删除
	 */
	@Log("站点（充装站、检验站）-批量删除")
	@PostMapping( "/batchRemove")
	@ResponseBody
	@RequiresPermissions("stationinfo:stations:batchRemove")
	public R remove(@RequestParam("ids[]") String[] ids){
		stationsService.batchRemove(ids);
		return R.ok();
	}
	
	@PostMapping("/exit")
	@ResponseBody
	boolean nameExit(StationsDO stations) {
		// 存在，不通过，false
		return !stationsService.exit(stations);
	}
}
